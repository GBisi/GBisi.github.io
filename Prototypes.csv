ProtoID,Title,Sub,Keywords,Desc,Repo
Solomon,Solomon++,"A declarative framework to specify customisable policies for mediating contrasting (user and/or global) goals and actuator settings in smart environments","Goal-oriented systems, IoT, Logic Programming, LPaaS","Solomon++ is a declarative open-source framework to represent hierarchical smart environments, user-set goals and customisable energy-aware mediation policies to reconcile contrasting (user and/or global) goals and relative actuator settings, encompassing multiple IoT systems considering also user roles and sustainability objectives.","https://github.com/di-unipi-socc/Solomon"
FogBrain,FogBrainX,"Continuous Reasoning for managing next-gen Cloud-Edge applications in continuity with the CI/CD pipeline","","Developing and releasing multiservice applications rely upon a pipeline of automation tools known as Continuous Integration/Continuous Deployment. Among those tools, Continuous Reasoning is exploited by large companies to perform incremental static analyses on their code commits as soon as they are integrated into a shared codebase. Within this context, we extend continuous reasoning towards the continuous QoS- and context-aware management of multiservice applications in Cloud-IoT scenarios. FogBrainX is a novel continuous reasoning methodology that supports runtime decision on service placement by reacting both to changes in the infrastructure and in the application requirements, and capable of suggesting migrations only for services affected by such changes. Experimental results show that our approach brings considerable speed-up in comparison with an exhaustive search employing non-incremental reasoning.","https://github.com/di-unipi-socc/fogbrainx"
cloudWatcher,cloudWatcher,"An open-source prototype tool to perform highly customisable fault and performance monitoring across multiple Clouds","","cloudWatcher aims at monitoring customised health metrics (e.g., the availability of a cloud service and its performance, the status of the network, the performance of a VM's disk) of multi-Cloud OpenStack systems, by providing configurable alerts associated with such measurements, and it is extensible to accommodate further metrics. Such an objective is pursued through a design that is based on a declarative and modular methodology for monitoring multiple datacentres (DCs).","https://github.com/di-unipi-socc/cloudWatcher"